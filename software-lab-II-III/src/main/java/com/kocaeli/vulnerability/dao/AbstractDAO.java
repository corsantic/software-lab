package com.kocaeli.vulnerability.dao;

import java.lang.reflect.ParameterizedType;
import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;



public abstract class AbstractDAO<T>
{
    @Autowired
    protected SessionFactory sessionFactory;

    protected Class<T> persistentClass;

    @SuppressWarnings("unchecked")
    protected AbstractDAO()
    {
        this.persistentClass = (Class<T>) ((ParameterizedType) getClass().getGenericSuperclass()).getActualTypeArguments()[0];
    }

    @SuppressWarnings("unchecked")
    public T getById(Long id)
    {
        return sessionFactory.getCurrentSession().get(persistentClass, id);
    }

    @SuppressWarnings("unchecked")
    protected Criteria createCriteria()
    {
        return sessionFactory.getCurrentSession().createCriteria(persistentClass);
    }

    @SuppressWarnings("unchecked")
    public void delete(Long id)
    {
        sessionFactory.getCurrentSession().delete(getById(id));
    }

    @SuppressWarnings("unchecked")
    public List<T> loadAll()
    {
        return sessionFactory.getCurrentSession().createCriteria(persistentClass).list();
    }

    @SuppressWarnings("unchecked")
    public void saveOrUpdate(T T)
    {
        sessionFactory.getCurrentSession().saveOrUpdate(T);
    }
}



