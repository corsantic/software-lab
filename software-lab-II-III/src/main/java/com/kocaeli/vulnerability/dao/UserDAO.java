package com.kocaeli.vulnerability.dao;

import org.hibernate.Criteria;
import org.hibernate.SQLQuery;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.kocaeli.vulnerability.entity.User;


@Repository
@Transactional
public class UserDAO
{
    @Autowired
    private SessionFactory sessionFactory;

    public User loadUserWithVulnerability(String username, String password)
    {
        Session currentSession = sessionFactory.getCurrentSession();
        String sql = "select * from user where username='" + username + "' and password='" + password + "'";

        SQLQuery query = currentSession.createSQLQuery(sql);
        query.addEntity(User.class);

        return query.list().size() > 0 ? (User) query.list().get(0) : null;
    }

    public User loadUserWithoutVulnerability(String username, String password)
    {
        Criteria criteria = sessionFactory.getCurrentSession().createCriteria(User.class);
        criteria.add(Restrictions.eq("username", username));
        criteria.add(Restrictions.eq("password", password));

        return criteria.list().size() > 0 ? (User) criteria.list().get(0) : null;
    }
}



