package com.kocaeli.vulnerability.dao;

import java.sql.ResultSet;
import java.sql.SQLClientInfoException;
import java.sql.SQLException;
import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.kocaeli.vulnerability.entity.User;

import javax.sql.DataSource;


@Repository
@Transactional
public class UserDAO
{
    @Autowired
    private
    SessionFactory sessionFactory;


    public User getById(Long id)
    {
        Session currentSession = sessionFactory.getCurrentSession();
        return currentSession.get(User.class, id);
    }

    public void delete(Long id)
    {
        Session currentSession = sessionFactory.getCurrentSession();
        currentSession.delete(getById(id));
    }

    public List<User> getAll()
    {
        Session currentSession = sessionFactory.getCurrentSession();
        return currentSession.createCriteria(User.class).list();
    }

    public void saveOrUpdate(User User)
    {
        Session currentSession = sessionFactory.getCurrentSession();
        currentSession.saveOrUpdate(User);
    }
    public void register(User user) {
        String sql = "insert into users values(?,?)";
        Session currentSession=sessionFactory.getCurrentSession();
        currentSession.saveOrUpdate(sql,new Object[]{user.getUsername(), user.getPassword()});
    }
//    public void validateUser(User user)
//    {
//        Session currentSession=sessionFactory.getCurrentSession();
//        String sql = "select * from user where username='" + user.getUsername() + "' and password='" + user.getPassword()
//                + "'";
//        List<User> users =currentSession.
//        return users.size() > 0 ? users.get(0) : null;
//    }
//    // select * from ...
//    class UserMapper implements RowMapper<User> {
//        public User mapRow(ResultSet rs, int arg1) throws SQLException {
//            User user = new User();
//            user.setUsername(rs.getString("username"));
//            user.setPassword(rs.getString("password"));
//
//            return user;
//        }
}