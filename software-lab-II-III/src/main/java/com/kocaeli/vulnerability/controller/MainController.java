package com.kocaeli.vulnerability.controller;

import com.kocaeli.vulnerability.entity.User;
import com.kocaeli.vulnerability.service.UserService;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.jws.WebParam;

@Controller
@RequestMapping("/")
public class MainController

{

    private UserService userService;

    @RequestMapping(method = RequestMethod.GET)
    public String printHello(Model model) {
        model.addAttribute("message", "Hello human!");
        return "home";
    }

    @RequestMapping(value = "/test", method = RequestMethod.GET)
    public String test() {
        return "test";

    }

    @RequestMapping(value = "/user", method = RequestMethod.GET)
    public String user(Model model) {
        model.addAttribute("user", new User());
        return "test";


    }

    @RequestMapping(value = "/login", method = RequestMethod.POST)
    public String login(@ModelAttribute("user") User user, ModelMap model) {


        if (user.getUsername() != null && user.getPassword() != null && !user.getUsername().isEmpty() && !user.getPassword().isEmpty()) {
            model.addAttribute("name", user.getUsername());
            model.addAttribute("password", user.getPassword());
            userService.loadUser(user.getUsername(), user.getPassword());
            model.addAttribute("message", "Hello !" + user.getUsername());
            return "home";
        } else {
            model.addAttribute("user", new User());
            return "test";
        }


        // userSErvice.loadUser(userna, pas

    }

    @RequestMapping(value = "/register", method = RequestMethod.GET)
    public String register(Model model) {

        model.addAttribute("user", new User());
        return "register";


    }

    @RequestMapping(value = "registerP", method = RequestMethod.POST)
    public Model registerProcess(@ModelAttribute("user") User user, Model model) {

        
        userService.registerService(user);

        return model.addAttribute("welcome", user.getUsername());


    }


}